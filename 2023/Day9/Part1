[LL_WEBREPORT_STARTSCRIPT NAME:sDiff /]
function List loadData(List incom)
 List output = {}
 Integer myNum, prev = incom[2]-incom[1]
 for (count=1;count< Length(incom);count+=1)
  myNum= incom[count+1]-incom[count]
  output = { @output, myNum }
  if IsDefined(prev)
   if prev!=myNum
    prev=undefined
   end
  end
 end
 if IsDefined(prev)
  return { incom, output }
 end
 return { incom, @.sDiff(output) }
end
[LL_WEBREPORT_ENDSCRIPT /]

[LL_WEBREPORT_STARTSCRIPT NAME:loadData /]
function String loadData(Dynamic context)
 Date sDate = Date.Now()
 Integer count=1, curSum=0, tempSum
 List inpElem, levtwo
 for myItem in context.data
  inpElem[count] = Str.Elements(myItem.Column1, ' ')
  // Wish I could force the elements as integers at first.
  for (icount=1;icount<=Length(inpElem[count]);icount+=1)
   inpElem[count][icount] = Str.StringToInteger(inpElem[count][icount])
  end
  levtwo[count] = .sDiff(inpElem[count])
  tempSum=0 // last element
  for (icount=Length(levtwo[count]);icount>=1;icount-=1)
   tempSum+=levtwo[count][icount][-1]
  end
  curSum+=tempSum
  count += 1
 end
 return Str.String(curSum)+'<BR>Timing: Started: '+Str.String(sDate)+'. Ended: '+Str.String(Date.Now())
end
[LL_WEBREPORT_ENDSCRIPT /]

Output:<BR>
[LL_WEBREPORT_CALL NAME:loadData /]
