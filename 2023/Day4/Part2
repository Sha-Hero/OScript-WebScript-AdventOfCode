[LL_WEBREPORT_STARTSCRIPT NAME:parseInput /]
// This is the function that does the work.
function List anyName(String cardnum, String draws)
 cardnum = Str.Strip(cardnum, "'") // removing leading/trailing quotes.
 draws = Str.Strip(draws, "'") // removing leading/trailing quotes.
 // Just going to union the sides and see how much "shorter" the list is.
 List winnum = Str.Elements(draws, "|")
 List eachrow = { List.SetRemove(Str.Elements(winnum[1], ' '), ''), List.SetRemove(Str.Elements(winnum[2], ' '), '') }
 eachrow = { @eachrow, Str.ValueToString(Length(eachrow[1])+Length(eachrow[2])-Length(List.SetUnion(eachrow[1], eachrow[2]))) }
 return eachrow
end
[LL_WEBREPORT_ENDSCRIPT /]

[LL_WEBREPORT_STARTSCRIPT NAME:loadData /]
// The various arrays are used only for debugging and display purposes.
function String loadData(Dynamic context)
 integer sum = 0, points=0, totalp=0
 string retArray=""
 List funcRet = {}
 // OK, let's load the data and do the work.
 // This one we need to load the data and then look in reverse.
 //Card 1: 41 48 83 86 17 | 83 86  6 31 17  9 48 53 (4)
 //Card 2: 13 32 20 16 61 | 61 30 68 82 17 32 24 19 (2)
 //Card 3:  1 21 53 59 44 | 69 82 63 72 16 21 14  1 (2)
 //Card 4: 41 92 73 84 69 | 59 84 76 51 58  5 54 83 (1)
 //Card 5: 87 83 26 28 32 | 88 30 70 12 93 22 82 36
 //Card 6: 31 18 13 56 72 | 74 77 10 23 35 67 36 11
 //c6=1
 //c5=1
 //c4=1+1xc5=2
 //c3=1+1xc4+1xc5=1+2+1=4
 //c2=1+1xc3+1xc4=1+4+2=7
 //c1=1+1xc2+1xc3+1xc4+1xc5=1+7+4+2+1=15
 //Total=1+1+2+4+7+15=30
 // ASSUME: Cards are in order, no skipping, etc.
 integer count = 1
 for myItem in context.data
  funcRet[count] = .parseInput(Str.ValueToString(myItem.Column1), Str.ValueToString(myItem.Column2))
  count += 1
 end
 List pointval = {}
 for (count=Length(funcRet)+1;count-=1;count>0)
  // count is the card number. funcRet[count][3] is the number of later cards.
  pointval[count]=1 //  
  points=1
  while points<=Str.StringToInteger(funcRet[count][3]) // OMG had this as a for loop but it never completed. No idea why.
   if IsDefined(pointval[count+points])
    pointval[count] += pointval[count+points]
   end
   points+=1
  end
  totalp += pointval[count]
 end
 return Str.String(totalp)
end
[LL_WEBREPORT_ENDSCRIPT /]

Data: [LL_WEBREPORT_CALL NAME:loadData /]
